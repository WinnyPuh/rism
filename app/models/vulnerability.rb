class Vulnerability < ApplicationRecord
  include Vulnerability::Ransackers

  # source (feed) of vulnerability info
  enum feed: %i[custom nvd]

  # (/AV:N/ && /PR:N/ && /AC:H/) || (/AV:N/ && /AU:N/ && /AC:H/)
  # (/AV:[NAL]/ && /PR:N/ && /AC:L/) || (/AV:NAL/ && /AU:N/ && /AC:L/)
  # /AV:N/ && /PR:[L]/ && /AC:[L]/) || (/AV:N/ && /AU:S/ && /L/)

#  # exploitability vector
#  enum av: %i[N A L P] #  Attack Vector
#  enum av2: %i[N A L] # Access Vector = Attack Vector
#
#  enum ac: %i[L H] # Attack Complexity
#  enum ac2: %i[L M H]
#
#  enum pr: %i[N L H] # Privileges Recuired
#  enum au: %i[N S M] # Privileges Recuired = AUthentication
#
#  enum ui: %i[N R] # User Interaction
#
#  # scopes
#  enum s: %i[U C] # Scope - only in cvss 3
#
#  # impact
#  enum c: %i[H L N] # Confidentiality
#  enum c2: %i[C P N] 
#
#  enum i: %i[H L N] # Integrity
#  enum i2: %i[C P N]
#
#  enum a: %i[H L N] # Availability
#  enum a2: %i[C P N]
#
#
#  # exploit code maturity
#  enum e: %i[X H F P U]
#  enum e2: %i[U POC F H ND] # Exploitability
#
#  # remediation level
#  enum rl: %i[X U W T O]
#  enum rl2: %i[OF TF W U ND]
#
#  # report confidence
#  enum rc: %i[X C R U]
#  enum rc2: %i[UC UR C ND]
#
#  # security requirements
#  enum cr: %i[X H M L]
#  enum cr2: %i[ND H M L]
#
#  enum ir: %i[X H M L]
#  enum ir2: %i[ND H M L]
#
#  enum ar: %i[X H M L]
#  enum ar2: %i[ND H M L]
#
#  # only in cvss 2
#  enum cdp2: %i[N L LM MH H ND] # Collateral Damage Potential
#  enum td2: %i[N L M H ND] # Target Distribution

  # modified
  #Modified Attack Vector, MAV[X,N,A,L,P]
  #Modified Attack Complexity, MAC[X,L,H]
  #Modified Privileges Required, MPR[X,N,L,H]
  #Modified User Interaction, MUI[X,N,R]
  #Modified Scope, MS[X,U,C]
  #Modified Confidentiality, MC [X,N,L,H]
  #Modified Integrity, MI[X,N,L,H] 
  #Modified Availability, MA[X,N,L,H]

  # rating
  #  None 0.0
  #  Low 0.1 - 3.9
  #  Medium 4.0 - 6.9
  #  High 7.0 - 8.9
  #  Critical 9.0 - 10.0

  validates :codename, uniqueness: true
  validates :codename, length: { in: 3..250 }
  validates :cvss3, inclusion: { in: 0.1..10.0, allow_blank: true }
  validates :feed, inclusion: { in: Vulnerability.feeds.keys}
end
