# frozen_string_literal: true

module Vulnerability::Ransackers
  extend ActiveSupport::Concern
  include RansackerDatetimeCast

  included do
    ransacker :published_str do
      RansackerDatetimeCast.datetime_field_to_text_search 'vulnerabilities', 'published', :reverse
    end

    ransacker :modified_str do
      RansackerDatetimeCast.datetime_field_to_text_search 'vulnerabilities', 'modified', :reverse
    end

    ransacker :vendors_str do
      Arel.sql("array_to_string(vulnerabilities.vendors, ' ')")
    end

    ransacker :products_str do
      Arel.sql("array_to_string(vulnerabilities.products, ' ')")
    end

    ransacker :feed_description_str do
      Arel.sql("array_to_string(vulnerabilities.feed_description, ' ')")
    end

    ransacker :unread_str do
      field_transformation = <<~SQL
        CASE
        WHEN vulnerabilities.unread IS TRUE
        THEN '#{I18n.t('labels.vulnerability.unread')}'
        ELSE '#{I18n.t('labels.vulnerability.read')}'
        END
      SQL
      Arel.sql(field_transformation)
    end

    ransacker :feed_str do
      field_transformation = <<~SQL
        CASE vulnerabilities.feed
        WHEN 0
        THEN '#{Vulnerability.human_enum_name(:feed, 'custom')}'
        WHEN 1
        THEN '#{Vulnerability.human_enum_name(:feed, 'nvd')}'
        END
      SQL
      Arel.sql(field_transformation)
    end

    ransacker :cvss do
      Arel.sql("COALESCE(vulnerabilities.cvss3, vulnerabilities.cvss2, 0)")
    end
  end
end
