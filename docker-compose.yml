# For setup before first
# 1. setup values (at least SECRET_KEY_BASE) fol environment variables
# 2. run setup command:
# docker-compose run --rm app bundle exec rake db:create
# After that for start RISM every time just do:
# docker-compose up
version: '3.4'

services:
  app:
    image: rism:latest
    depends_on:
      - database
      - redis
    ports:
      - "3000:3000"
    volumes:
      - file_storage:/app/file_storage
    # env_file: .env.production
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/", "||", "exit", "1"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - RAILS_ENV=production
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_USER=rism
      - DATABASE_PASSWORD=password
      - SECRET_KEY_BASE=4fdabd95f7c6da693219963d6b7b5097a3fb488be1f176ecb26f6983cfa7d3bc20a4d0051ea41f7ae67a4da6ccfde134b938959523c72dd6fe5ff7bf9dfebfc0
      - MAIL_FROM=rism@mail
      # - PROXY_SERVER
      # - PROXY_PORT
      # - PROXY_USER
      # - PROXY_PASSWORD
      # - HTTPARTY_VERIFY_TLS
      # - RA_PROXY_SERVER
      # - RA_PROXY_PORT
      # - RA_PROXY_USER
      # - RA_PROXY_PASSWORD
      - RA_HTTPARTY_VERIFY_TLS=false
      - SHODAN_KEY=key
      - FREE_SHODAN=true
      - VULDB_KEY=key
      - VIRUS_TOTAL_PUBLIC_KEY=key
      #- VIRUS_TOTAL_PRIVATE_KEY=key
      - X_FORCE_KEY=key
      - X_FORCE_SECRET=secret
      - SESSION_CUTOFF_DAYS=5
      - USER_ACTION_CUTOFF_MONTH=6
      - INVESTIGATION_CUTOFF_MONTH=6
      - SCAN_RESULT_CUTOFF_MONTH=3
      # - WEB_CONCURRENCY=1
      - RAILS_MAX_THREADS=5
      - RAILS_SERVE_STATIC_FILES=true
    #restart: always

  database:
    image: postgres:10.14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    #  - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=rism
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    #restart: always

  redis:
    image: redis:6.0.8-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5
    #restart: always

  sidekiq:
    image: rism:latest
    depends_on:
      - app
      - database
      - redis
    # env_file: .env.production
    environment:
      - RAILS_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: bundle exec sidekiq start
    #restart: always

    #  nginx:
    #    image: nginx:1.18.0-alpine
    #    depends_on:
    #      - app
    #    ports:
    #      - '443:443'
    #restart: always

volumes:
  db_data:
  redis_data:
  file_storage:
